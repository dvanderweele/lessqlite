name: Test

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        poetry-version: [1.1.6]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Set up cache
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
      - name: Install Dependencies
        run: poetry install
      - name: Test
        run: poetry run coverage run --source lessqlite -m pytest 
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run coveralls --service=github
  readme_conversion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Convert README
        run:
          sudo apt install pandoc -y && pandoc -f markdown -t rst -o READMEnew.rst README.md && cmp --silent README.rst READMEnew.rst || mv -f READMEnew.rst README.rst && touch READMEnew.rst && rm READMEnew.rst && git config --global user.name 'Dave VanderWeele' && git config --global user.email 'weele.me@gmail.com' && git add . && git commit -m "Readme Conversion" && git push
